// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(200)
  status    Int       @default(1) @db.SmallInt()
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @updatedAt @map("deleted_at")

  User           User[]
  RolePermission RolePermission[]

  @@map("role")
}

model User {
  id          Int       @id @default(autoincrement())
  fullName    String    @map("full_name") @db.VarChar(300)
  phoneNumber String    @unique @map("phone_number") @db.VarChar(13)
  password    String
  roleId      Int       @map("role_id")
  numericId   String?   @unique @map("numeric_id") @db.VarChar(15)
  status      Int       @default(1) @db.SmallInt()
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime? @updatedAt @map("updated_at")
  deletedAt   DateTime? @updatedAt @map("deleted_at")

  role Role @relation(fields: [roleId], references: [id])

  @@map("users")
}

// model Permission {
//   id          Int       @id @default(autoincrement())
//   name        String    @db.VarChar(150)
//   description String?
//   status      Int       @default(1) @db.SmallInt()
//   createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp
//   updatedAt   DateTime? @updatedAt @map("updated_at")
//   deletedAt   DateTime? @updatedAt @map("deleted_at")

//   RolePermission RolePermission[]

//   @@map("permission")
// }

model RolePermission {
  id         Int       @id @default(autoincrement())
  roleId     Int       @map("role_id")
  // permissionId Int       @map("permission_id")
  permission String
  path       String    @map("path")
  status     Int       @default(1) @db.SmallInt()
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt  DateTime? @updatedAt @map("updated_at")
  deletedAt  DateTime? @updatedAt @map("deleted_at")

  role Role @relation(fields: [roleId], references: [id])
  // Permission Permission @relation(fields: [permissionId], references: [id])

  @@map("role_permission")
}

model ApiLogs {
  id            Int      @id @default(autoincrement())
  userId        Int      @map("user_id")
  userNumericId String?  @map("user_numeric_id") @db.VarChar(15)
  userFullName  String?  @map("user_full_name") @db.VarChar(300)
  userRole      String?  @map("user_role") @db.VarChar(50)
  method        String?  @db.VarChar(50)
  path          String?  @db.VarChar(150)
  request       String?
  response      String?
  status        Int?
  duration      Int?     @db.SmallInt()
  timestamp     DateTime @default(now())

  @@map("api_logs")
}
